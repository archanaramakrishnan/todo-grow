{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js\";\nimport { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tree(props) {\n  function sketch(p5) {\n    let IS_LEAF = true;\n    let taskCount = props.tasks;\n    console.log(taskCount);\n    function updateBranchLength() {\n      if (props.tasks !== taskCount) {\n        // cons\n      }\n    }\n    function colorGreenIfLeaf(isLeaf) {\n      if (isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        };\n      } else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        };\n      }\n    }\n    let width = p5.windowHeight;\n    let height = p5.windowHeight;\n    // console.log(this.props.tasks)\n\n    p5.setup = () => {\n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES);\n      p5.noLoop();\n      // console.log(p5.angleMode());\n    };\n\n    p5.draw = () => {\n      p5.background(220);\n      // translate to the center of the screen\n      p5.translate(0, height / 2);\n      //range is 20-60\n\n      let branchLength = 20;\n      if (branchLength <= 60) {\n        branchLength = 20 + props.tasks * 5;\n      }\n      p5.branch(20 + props.tasks * 5);\n    };\n    p5.branch = len => {\n      // console.log(props.selfCare)\n      // console.log(props.tasks) //yay it is accessible here!\n      p5.push();\n      if (len > 10) {\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15));\n        p5.stroke(70, 40, 20);\n        // stroke\n        //draw a line in 2D with a default width of 1 pixel\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len);\n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len); //translate to the end of the branch\n        p5.rotate(25);\n        p5.branch(len * p5.random(0.7, 0.9));\n        p5.rotate(p5.random(-50, -60));\n        p5.branch(len * p5.random(0.7, 0.9));\n      } else {\n        let r, g, b, transparency, color;\n        if (props.selfCare > 0) {\n          color = colorGreenIfLeaf(IS_LEAF);\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n        } else {\n          color = colorGreenIfLeaf(true);\n        }\n        r = color.r;\n        g = color.g;\n        b = color.b;\n        transparency = color.transparency;\n        p5.fill(r, g, b, transparency);\n        p5.noStroke();\n        p5.beginShape();\n        for (let i = 45; i < 135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(i);\n          p5.vertex(x, y);\n        }\n        for (let i = 135; i > 40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(-i) + 15;\n          p5.vertex(x, y);\n        }\n        p5.endShape(p5.CLOSE);\n      }\n      p5.pop();\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n}\n_c = Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["random","React","ReactP5Wrapper","Tree","props","sketch","p5","IS_LEAF","taskCount","tasks","console","log","updateBranchLength","colorGreenIfLeaf","isLeaf","r","g","b","transparency","width","windowHeight","height","setup","createCanvas","WEBGL","angleMode","DEGREES","noLoop","draw","background","translate","branchLength","branch","len","push","strokeWeight","map","stroke","line","rotate","color","selfCare","fill","noStroke","beginShape","i","rad","x","cos","y","sin","vertex","endShape","CLOSE","pop"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nexport default function Tree(props) {\n  function sketch(p5) {\n    let IS_LEAF = true;\n    let taskCount = props.tasks;\n    console.log(taskCount)\n\n    function updateBranchLength() {\n      if(props.tasks !== taskCount) {\n        // cons\n      }\n\n    }\n\n    function colorGreenIfLeaf(isLeaf) {\n      if(isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        }\n      }\n      else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        }\n      }\n    }\n\n    let width = p5.windowHeight;\n    let height = p5.windowHeight; \n    // console.log(this.props.tasks)\n  \n    p5.setup = () => { \n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES)\n\n      p5.noLoop()\n      // console.log(p5.angleMode());\n    }\n  \n    p5.draw = () => {\n      p5.background(220)\n      // translate to the center of the screen\n      p5.translate(0, height/2)\n      //range is 20-60\n\n      let branchLength = 20;\n\n      if(branchLength <= 60)\n      {\n        branchLength = 20 + (props.tasks * 5);\n      }\n\n      p5.branch(20 + (props.tasks * 5))\n    }\n  \n    p5.branch = (len) => {\n      // console.log(props.selfCare)\n      // console.log(props.tasks) //yay it is accessible here!\n      p5.push();\n      if(len > 10) {\n\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15))\n        p5.stroke(70, 40, 20)\n        // stroke\n        //draw a line in 2D with a default width of 1 pixel\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len) \n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len) //translate to the end of the branch\n        p5.rotate(25)\n        p5.branch(len * p5.random(0.7, 0.9))\n        p5.rotate(p5.random(-50, -60))\n        p5.branch(len * p5.random(0.7, 0.9))\n      } else {\n\n        let r, g, b, transparency, color;\n        if(props.selfCare > 0){\n          color = colorGreenIfLeaf(IS_LEAF)\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n        }\n        else {\n          color = colorGreenIfLeaf(true)\n        }\n        r = color.r\n        g = color.g\n        b = color.b\n        transparency = color.transparency;\n        \n        p5.fill(r, g, b, transparency);\n        p5.noStroke()\n        \n        p5.beginShape()\n        for(let i=45; i<135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(i)\n          p5.vertex(x, y)\n        }\n        for(let i=135; i>40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(-i) + 15\n          p5.vertex(x, y)\n        }\n        p5.endShape(p5.CLOSE)\n      }\n      p5.pop();\n    };\n  }\n\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}