{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js\";\nimport { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tree(props) {\n  function sketch(p5) {\n    let IS_LEAF = true;\n    function colorGreenIfLeaf(isLeaf) {\n      if (isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        };\n      } else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        };\n      }\n    }\n    let width = p5.windowWidth;\n    let height = p5.windowHeight * 0.9;\n    p5.setup = () => {\n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES);\n      p5.noLoop();\n    };\n    p5.draw = () => {\n      p5.background(220);\n      // translate to the center of the screen\n      p5.translate(0, height / 2);\n      let branchLength = props.tasks;\n      if (branchLength < 150) {\n        branchLength = branchLength + props.tasks * 15;\n        console.log(props.tasks, branchLength);\n        p5.branch(branchLength);\n      } else {\n        p5.branch(branchLength);\n      }\n    };\n    p5.branch = len => {\n      p5.push();\n      if (len > 10) {\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15));\n        p5.stroke(70, 40, 20, 100);\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len);\n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len); //translate to the end of the branch\n        p5.rotate(25);\n        p5.branch(len * p5.random(0.7, 0.9));\n        p5.rotate(p5.random(-50, -60));\n        p5.branch(len * p5.random(0.7, 0.9));\n      } else {\n        let r, g, b, transparency, color;\n        if (props.selfCare > 0) {\n          color = colorGreenIfLeaf(IS_LEAF);\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n        } else {\n          color = colorGreenIfLeaf(true);\n        }\n        r = color.r;\n        g = color.g;\n        b = color.b;\n        transparency = color.transparency;\n        p5.fill(r, g, b, transparency);\n        p5.noStroke();\n\n        //draw leaf\n        p5.beginShape();\n        for (let i = 45; i < 135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(i);\n          p5.vertex(x, y);\n        }\n        for (let i = 135; i > 40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(-i) + 15;\n          p5.vertex(x, y);\n        }\n        p5.endShape(p5.CLOSE);\n      }\n      p5.pop();\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n}\n_c = Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["random","React","ReactP5Wrapper","Tree","props","sketch","p5","IS_LEAF","colorGreenIfLeaf","isLeaf","r","g","b","transparency","width","windowWidth","height","windowHeight","setup","createCanvas","WEBGL","angleMode","DEGREES","noLoop","draw","background","translate","branchLength","tasks","console","log","branch","len","push","strokeWeight","map","stroke","line","rotate","color","selfCare","fill","noStroke","beginShape","i","rad","x","cos","y","sin","vertex","endShape","CLOSE","pop"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nexport default function Tree(props) {\n  function sketch(p5) {\n    let IS_LEAF = true;\n    function colorGreenIfLeaf(isLeaf) {\n      if(isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        }\n      }\n      else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        }\n      }\n    }\n\n    let width = p5.windowWidth;\n    let height = p5.windowHeight*0.9;\n  \n    p5.setup = () => { \n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES)\n      p5.noLoop()\n    }\n  \n    p5.draw = () => {\n      p5.background(220)\n      // translate to the center of the screen\n      p5.translate(0, height/2);\n\n      let branchLength = props.tasks;\n      if(branchLength < 150)\n      {\n        branchLength = branchLength + (props.tasks * 15);\n        console.log(props.tasks, branchLength)\n        p5.branch(branchLength)\n      }\n      else {\n        p5.branch(branchLength)\n      }\n      \n    }\n  \n    p5.branch = (len) => {\n      p5.push();\n      if(len > 10) {\n\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15))\n        p5.stroke(70, 40, 20, 100)\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len) \n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len) //translate to the end of the branch\n        p5.rotate(25)\n        p5.branch(len * p5.random(0.7, 0.9))\n        p5.rotate(p5.random(-50, -60))\n        p5.branch(len * p5.random(0.7, 0.9))\n      } else {\n        let r, g, b, transparency, color;\n        if(props.selfCare > 0) {\n          color = colorGreenIfLeaf(IS_LEAF)\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n        }\n        else {\n          color = colorGreenIfLeaf(true)\n        }\n        r = color.r\n        g = color.g\n        b = color.b\n        transparency = color.transparency;\n        \n        p5.fill(r, g, b, transparency);\n        p5.noStroke()\n        \n        //draw leaf\n        p5.beginShape()\n        for(let i=45; i<135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(i)\n          p5.vertex(x, y)\n        }\n        for(let i=135; i>40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(-i) + 15\n          p5.vertex(x, y)\n        }\n        p5.endShape(p5.CLOSE)\n      }\n      p5.pop();\n    };\n  }\n\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}