{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js\";\nimport { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tree(props) {\n  function sketch(p5) {\n    let firstTask = true;\n    let IS_LEAF = true;\n    let taskCount = props.tasks;\n    // console.log(taskCount)\n\n    function updateBranchLength() {\n      if (props.tasks !== taskCount) {\n        // cons\n      }\n    }\n    function colorGreenIfLeaf(isLeaf) {\n      if (isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        };\n      } else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        };\n      }\n    }\n    let width = p5.windowWidth;\n    let height = p5.windowHeight * 0.9;\n    // console.log(this.props.tasks)\n\n    p5.setup = () => {\n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES);\n      p5.noLoop();\n      // console.log(p5.angleMode());\n    };\n\n    p5.draw = () => {\n      p5.background(220);\n      // translate to the center of the screen\n      p5.translate(0, height / 2);\n      //range is 20-60\n\n      let branchLength = 40;\n      if (!firstTask && branchLength <= 300) {\n        branchLength = branchLength + props.tasks * 20;\n      }\n      console.log(props.tasks, branchLength);\n      p5.branch(branchLength);\n      firstTask = false;\n    };\n    p5.branch = len => {\n      // console.log(props.selfCare)\n      // console.log(props.tasks) //yay it is accessible here!\n      p5.push();\n      if (len > 10) {\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15));\n        p5.stroke(70, 40, 20, 10);\n        // stroke\n        //draw a line in 2D with a default width of 1 pixel\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len);\n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len); //translate to the end of the branch\n        p5.rotate(25);\n        p5.branch(len * p5.random(0.7, 0.9));\n        p5.rotate(p5.random(-50, -60));\n        p5.branch(len * p5.random(0.7, 0.9));\n      } else {\n        let r, g, b, transparency, color;\n        if (props.selfCare > 0) {\n          color = colorGreenIfLeaf(IS_LEAF);\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n        } else {\n          color = colorGreenIfLeaf(true);\n        }\n        r = color.r;\n        g = color.g;\n        b = color.b;\n        transparency = color.transparency;\n        p5.fill(r, g, b, transparency);\n        p5.noStroke();\n        p5.beginShape();\n        for (let i = 45; i < 135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(i);\n          p5.vertex(x, y);\n        }\n        for (let i = 135; i > 40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(-i) + 15;\n          p5.vertex(x, y);\n        }\n        p5.endShape(p5.CLOSE);\n      }\n      p5.pop();\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 10\n  }, this);\n}\n_c = Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["random","React","ReactP5Wrapper","Tree","props","sketch","p5","firstTask","IS_LEAF","taskCount","tasks","updateBranchLength","colorGreenIfLeaf","isLeaf","r","g","b","transparency","width","windowWidth","height","windowHeight","setup","createCanvas","WEBGL","angleMode","DEGREES","noLoop","draw","background","translate","branchLength","console","log","branch","len","push","strokeWeight","map","stroke","line","rotate","color","selfCare","fill","noStroke","beginShape","i","rad","x","cos","y","sin","vertex","endShape","CLOSE","pop"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nexport default function Tree(props) {\n  function sketch(p5) {\n    let firstTask = true;\n    let IS_LEAF = true;\n    let taskCount = props.tasks;\n    // console.log(taskCount)\n\n    function updateBranchLength() {\n      if(props.tasks !== taskCount) {\n        // cons\n      }\n\n    }\n\n    function colorGreenIfLeaf(isLeaf) {\n      if(isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        }\n      }\n      else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        }\n      }\n    }\n\n    let width = p5.windowWidth;\n    let height = p5.windowHeight*0.9; \n    // console.log(this.props.tasks)\n  \n    p5.setup = () => { \n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES)\n\n      p5.noLoop()\n      // console.log(p5.angleMode());\n    }\n  \n    p5.draw = () => {\n      p5.background(220)\n      // translate to the center of the screen\n      p5.translate(0, height/2)\n      //range is 20-60\n\n      let branchLength = 40;\n\n      if(!firstTask && branchLength <= 300)\n      {\n        branchLength = branchLength + (props.tasks * 20);\n      }\n      console.log(props.tasks, branchLength)\n\n\n      p5.branch(branchLength)\n\n      firstTask = false;\n    }\n  \n    p5.branch = (len) => {\n      // console.log(props.selfCare)\n      // console.log(props.tasks) //yay it is accessible here!\n      p5.push();\n      if(len > 10) {\n\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15))\n        p5.stroke(70, 40, 20, 10)\n        // stroke\n        //draw a line in 2D with a default width of 1 pixel\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len) \n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len) //translate to the end of the branch\n        p5.rotate(25)\n        p5.branch(len * p5.random(0.7, 0.9))\n        p5.rotate(p5.random(-50, -60))\n        p5.branch(len * p5.random(0.7, 0.9))\n      } else {\n\n        let r, g, b, transparency, color;\n        if(props.selfCare > 0){\n          color = colorGreenIfLeaf(IS_LEAF)\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n        }\n        else {\n          color = colorGreenIfLeaf(true)\n        }\n        r = color.r\n        g = color.g\n        b = color.b\n        transparency = color.transparency;\n        \n        p5.fill(r, g, b, transparency);\n        p5.noStroke()\n        \n        p5.beginShape()\n        for(let i=45; i<135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(i)\n          p5.vertex(x, y)\n        }\n        for(let i=135; i>40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(-i) + 15\n          p5.vertex(x, y)\n        }\n        p5.endShape(p5.CLOSE)\n      }\n      p5.pop();\n    };\n  }\n\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}