{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Todo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction usePrevious(value) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport default function Todo(props) {\n  _s2();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        value: newName,\n        onChange: handleChange,\n        ref: editFieldRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setIsEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n  const editTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: props.id,\n          className: \"todo-text\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setIsEditing(true),\n        ref: editButtonRef,\n        children: [/*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setIsEditing(false);\n  }\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n}\n_s2(Todo, \"/bVqXQp5j5+WMokQjF1un8C+/QY=\", false, function () {\n  return [usePrevious];\n});\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useRef","useState","EditIcon","DeleteIcon","usePrevious","value","ref","current","Todo","props","isEditing","setIsEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","editingTemplate","handleSubmit","id","name","handleChange","editTemplate","completed","toggleTaskCompleted","viewTemplate","deleteTask","e","target","preventDefault","editTask","focus"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Todo.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input \n          id={props.id} \n          className=\"todo-text\" \n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn todo-cancel\" onClick= {() => setIsEditing(false)}>\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const editTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <div className=\"form-group\">\n            <input id={props.id} className=\"todo-text\" type=\"text\" />\n          </div>\n        </div>\n    </div>\n  );\n\n\n  \n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button \n              type=\"button\" \n              className=\"btn\" \n              onClick= {() => setIsEditing(true)}\n              ref={editButtonRef}>\n             <EditIcon /> <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}>\n            <DeleteIcon /> <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }  \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setIsEditing(false);\n  }\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n  \n  \n  \n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AAAC;AAEpD,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EAC1B,MAAMC,GAAG,GAAGN,MAAM,EAAE;EACpBD,SAAS,CAAC,MAAM;IACdO,GAAG,CAACC,OAAO,GAAGF,KAAK;EACrB,CAAC,CAAC;EACF,OAAOC,GAAG,CAACC,OAAO;AACpB;AAAC,GANQH,WAAW;AAQpB,eAAe,SAASI,IAAI,CAACC,KAAK,EAAE;EAAA;EAElC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,YAAY,GAAGd,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMe,aAAa,GAAGf,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMgB,UAAU,GAAGZ,WAAW,CAACM,SAAS,CAAC;EAGzC,MAAMO,eAAe,gBACnB;IAAM,SAAS,EAAC,aAAa;IAAC,QAAQ,EAAEC,YAAa;IAAA,wBACnD;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAO,SAAS,EAAC,YAAY;QAAC,OAAO,EAAET,KAAK,CAACU,EAAG;QAAA,4BAChCV,KAAK,CAACW,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAClB,eACR;QACE,EAAE,EAAEX,KAAK,CAACU,EAAG;QACb,SAAS,EAAC,WAAW;QACrB,IAAI,EAAC,MAAM;QACX,KAAK,EAAEP,OAAQ;QACf,QAAQ,EAAES,YAAa;QACvB,GAAG,EAAEP;MAAa;QAAA;QAAA;QAAA;MAAA,QAClB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAG,MAAMH,YAAY,CAAC,KAAK,CAAE;QAAA,kCAEpF;UAAM,SAAS,EAAC,iBAAiB;UAAA,wBAAWF,KAAK,CAACW,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACvD,eACT;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,4BAA4B;QAAA,gCAE1D;UAAM,SAAS,EAAC,iBAAiB;UAAA,4BAAeX,KAAK,CAACW,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAET;EAED,MAAME,YAAY,gBAChB;IAAK,SAAS,EAAC,aAAa;IAAA,uBAC1B;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QACE,EAAE,EAAEb,KAAK,CAACU,EAAG;QACb,IAAI,EAAC,UAAU;QACf,cAAc,EAAEV,KAAK,CAACc,SAAU;QAChC,QAAQ,EAAE,MAAMd,KAAK,CAACe,mBAAmB,CAACf,KAAK,CAACU,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QACpD,eACF;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB;UAAO,EAAE,EAAEV,KAAK,CAACU,EAAG;UAAC,SAAS,EAAC,WAAW;UAAC,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEX;EAKD,MAAMM,YAAY,gBAChB;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QACE,EAAE,EAAEhB,KAAK,CAACU,EAAG;QACb,IAAI,EAAC,UAAU;QACf,cAAc,EAAEV,KAAK,CAACc,SAAU;QAChC,QAAQ,EAAE,MAAMd,KAAK,CAACe,mBAAmB,CAACf,KAAK,CAACU,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QACpD,eACF;QAAO,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEV,KAAK,CAACU,EAAG;QAAA,UAC7CV,KAAK,CAACW;MAAI;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QACI,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,KAAK;QACf,OAAO,EAAG,MAAMT,YAAY,CAAC,IAAI,CAAE;QACnC,GAAG,EAAEI,aAAc;QAAA,wBACpB,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,oBAAC;UAAM,SAAS,EAAC,iBAAiB;UAAA,UAAEN,KAAK,CAACW;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D,eACT;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,iBAAiB;QAC3B,OAAO,EAAE,MAAMX,KAAK,CAACiB,UAAU,CAACjB,KAAK,CAACU,EAAE,CAAE;QAAA,wBAC1C,QAAC,UAAU;UAAA;UAAA;UAAA;QAAA,QAAG,oBAAC;UAAM,SAAS,EAAC,iBAAiB;UAAA,UAAEV,KAAK,CAACW;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC7D;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEX;EAED,SAASC,YAAY,CAACM,CAAC,EAAE;IACvBd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC;EAC5B;EAEA,SAASa,YAAY,CAACS,CAAC,EAAE;IACvBA,CAAC,CAACE,cAAc,EAAE;IAClBpB,KAAK,CAACqB,QAAQ,CAACrB,KAAK,CAACU,EAAE,EAAEP,OAAO,CAAC;IACjCC,UAAU,CAAC,EAAE,CAAC;IACdF,YAAY,CAAC,KAAK,CAAC;EACrB;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,UAAU,IAAIN,SAAS,EAAE;MAC5BI,YAAY,CAACP,OAAO,CAACwB,KAAK,EAAE;IAC9B;IACA,IAAIf,UAAU,IAAI,CAACN,SAAS,EAAE;MAC5BK,aAAa,CAACR,OAAO,CAACwB,KAAK,EAAE;IAC/B;EACF,CAAC,EAAE,CAACf,UAAU,EAAEN,SAAS,CAAC,CAAC;EAM3B,oBAAO;IAAI,SAAS,EAAC,MAAM;IAAA,UAAEA,SAAS,GAAGO,eAAe,GAAGQ;EAAY;IAAA;IAAA;IAAA;EAAA,QAAM;AAC/E;AAAC,IAhHuBjB,IAAI;EAAA,QAMPJ,WAAW;AAAA;AAAA,KANRI,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}