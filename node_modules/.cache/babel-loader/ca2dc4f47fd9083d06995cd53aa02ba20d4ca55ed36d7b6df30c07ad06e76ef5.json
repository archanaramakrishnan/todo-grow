{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js\";\nimport { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tree(props) {\n  function sketch(p5) {\n    let width = 500;\n    let height = 400;\n    // console.log(this.props.tasks)\n\n    p5.setup = () => {\n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES);\n      p5.noLoop();\n      // console.log(p5.angleMode());\n    };\n\n    p5.draw = () => {\n      p5.background(220);\n      // translate to the center of the screen\n      p5.translate(0, height / 2);\n      p5.branch(60);\n    };\n    p5.branch = len => {\n      console.log(props.selfCare);\n      // console.log(props.tasks) //yay it is accessible here!\n      p5.push();\n      if (len > 10) {\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15));\n        p5.stroke(70, 40, 20);\n        // stroke\n        //draw a line in 2D with a default width of 1 pixel\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len);\n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len); //translate to the end of the branch\n        p5.rotate(25);\n        p5.branch(len * p5.random(0.7, 0.9));\n        p5.rotate(p5.random(-50, -60));\n        p5.branch(len * p5.random(0.7, 0.9));\n      } else {\n        let r, g, b;\n        if (props.tasks === props.selfCare) {\n          r = 80 + p5.random(-20, 20);\n          g = 120 + p5.random(-20, 20);\n          b = 40 + p5.random(-20, 20);\n        } else {}\n        p5.fill(r, g, b);\n        p5.noStroke();\n        p5.beginShape();\n        for (let i = 45; i < 135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(i);\n          p5.vertex(x, y);\n        }\n        for (let i = 135; i > 40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i);\n          let y = rad * p5.sin(-i) + 15;\n          p5.vertex(x, y);\n        }\n        p5.endShape(p5.CLOSE);\n      }\n      p5.pop();\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n_c = Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["random","React","ReactP5Wrapper","Tree","props","sketch","p5","width","height","setup","createCanvas","WEBGL","angleMode","DEGREES","noLoop","draw","background","translate","branch","len","console","log","selfCare","push","strokeWeight","map","stroke","line","rotate","r","g","b","tasks","fill","noStroke","beginShape","i","rad","x","cos","y","sin","vertex","endShape","CLOSE","pop"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nexport default function Tree(props) {\n  \n\n  function sketch(p5) {\n\n    let width = 500;\n    let height = 400; \n    // console.log(this.props.tasks)\n  \n    p5.setup = () => { \n      p5.createCanvas(width, height, p5.WEBGL);\n      p5.angleMode(p5.DEGREES)\n\n      p5.noLoop()\n      // console.log(p5.angleMode());\n    }\n  \n    p5.draw = () => {\n      p5.background(220)\n      // translate to the center of the screen\n      p5.translate(0, height/2)\n      p5.branch(60)\n    }\n  \n    p5.branch = (len) => {\n      console.log(props.selfCare)\n      // console.log(props.tasks) //yay it is accessible here!\n      p5.push();\n      if(len > 10) {\n\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15))\n        p5.stroke(70, 40, 20)\n        // stroke\n        //draw a line in 2D with a default width of 1 pixel\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len) \n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len) //translate to the end of the branch\n        p5.rotate(25)\n        p5.branch(len * p5.random(0.7, 0.9))\n        p5.rotate(p5.random(-50, -60))\n        p5.branch(len * p5.random(0.7, 0.9))\n      } else {\n\n        let r, g, b;\n        if(props.tasks === props.selfCare){\n          r = 80 + p5.random(-20, 20)\n          g = 120 + p5.random(-20, 20)\n          b = 40 + p5.random(-20, 20)\n        }\n        else {\n\n        }\n        \n        p5.fill(r, g, b);\n        p5.noStroke()\n\n        p5.beginShape()\n        for(let i=45; i<135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(i)\n          p5.vertex(x, y)\n        }\n        for(let i=135; i>40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(-i) + 15\n          p5.vertex(x, y)\n        }\n        p5.endShape(p5.CLOSE)\n      }\n      p5.pop();\n    };\n  }\n\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}