{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction sketch(p5) {\n  let width = 500;\n  let height = 400;\n  console.log(this.props.tasks);\n  p5.setup = () => p5.createCanvas(width, height, p5.WEBGL);\n  p5.draw = () => {\n    p5.background(100);\n    // translate to the center of the screen\n    p5.translate(width / 2, height / 2);\n    p5.branch(100);\n    // p5.background(250);\n    // p5.normalMaterial();\n    // p5.push();\n    // p5.rotateZ(p5.frameCount * 0.01);\n    // p5.rotateX(p5.frameCount * 0.01);\n    // p5.rotateY(p5.frameCount * 0.01);\n    // p5.plane(100);\n    // p5.pop();\n  };\n\n  p5.branch = len => {\n    //draw a line in 2D with a default width of 1 pixel\n    //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n    p5.line(0, 0, 0, -len);\n    //displace objects within the display window\n    //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n    p5.translate(0, -len); //translate to the end of the branch\n    p5.rotate(30);\n    p5.branch(len * 0.7);\n  };\n}\nexport default function Tree(props) {\n  console.log(props.tasks);\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_c = Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","ReactP5Wrapper","sketch","p5","width","height","console","log","props","tasks","setup","createCanvas","WEBGL","draw","background","translate","branch","len","line","rotate","Tree"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nfunction sketch(p5) {\n\n  let width = 500;\n  let height = 400; \n  console.log(this.props.tasks)\n\n  p5.setup = () => p5.createCanvas(width, height, p5.WEBGL);\n\n  p5.draw = () => {\n    p5.background(100)\n    // translate to the center of the screen\n    p5.translate(width/2, height/2)\n    p5.branch(100)\n    // p5.background(250);\n    // p5.normalMaterial();\n    // p5.push();\n    // p5.rotateZ(p5.frameCount * 0.01);\n    // p5.rotateX(p5.frameCount * 0.01);\n    // p5.rotateY(p5.frameCount * 0.01);\n    // p5.plane(100);\n    // p5.pop();\n  }\n\n  p5.branch = (len) => {\n    //draw a line in 2D with a default width of 1 pixel\n    //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n    p5.line(0, 0, 0, -len) \n    //displace objects within the display window\n    //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n    p5.translate(0, -len) //translate to the end of the branch\n    p5.rotate(30)\n    p5.branch(len*0.7)\n  };\n}\n\nexport default function Tree(props) {\n  console.log(props.tasks)\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAAC;AAElD,SAASC,MAAM,CAACC,EAAE,EAAE;EAElB,IAAIC,KAAK,GAAG,GAAG;EACf,IAAIC,MAAM,GAAG,GAAG;EAChBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;EAE7BN,EAAE,CAACO,KAAK,GAAG,MAAMP,EAAE,CAACQ,YAAY,CAACP,KAAK,EAAEC,MAAM,EAAEF,EAAE,CAACS,KAAK,CAAC;EAEzDT,EAAE,CAACU,IAAI,GAAG,MAAM;IACdV,EAAE,CAACW,UAAU,CAAC,GAAG,CAAC;IAClB;IACAX,EAAE,CAACY,SAAS,CAACX,KAAK,GAAC,CAAC,EAAEC,MAAM,GAAC,CAAC,CAAC;IAC/BF,EAAE,CAACa,MAAM,CAAC,GAAG,CAAC;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAEDb,EAAE,CAACa,MAAM,GAAIC,GAAG,IAAK;IACnB;IACA;IACAd,EAAE,CAACe,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAACD,GAAG,CAAC;IACtB;IACA;IACAd,EAAE,CAACY,SAAS,CAAC,CAAC,EAAE,CAACE,GAAG,CAAC,EAAC;IACtBd,EAAE,CAACgB,MAAM,CAAC,EAAE,CAAC;IACbhB,EAAE,CAACa,MAAM,CAACC,GAAG,GAAC,GAAG,CAAC;EACpB,CAAC;AACH;AAEA,eAAe,SAASG,IAAI,CAACZ,KAAK,EAAE;EAClCF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,KAAK,CAAC;EACxB,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEP;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAHuBkB,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}