{"ast":null,"code":"import{random}from\"nanoid\";import React from\"react\";import{ReactP5Wrapper}from\"react-p5-wrapper\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Tree(props){function sketch(p5){var IS_LEAF=true;var selfCareCount=200;function colorGreenIfLeaf(isLeaf){if(isLeaf){return{r:80+p5.random(-20,20),g:120+p5.random(-20,20),b:40+p5.random(-20,20),transparency:200};}else{return{r:220+p5.random(-20,20),g:120+p5.random(-20,20),b:170+p5.random(-20,20),transparency:255};}}var width=p5.windowWidth;var height=p5.windowHeight*0.9;p5.setup=function(){p5.createCanvas(width,height);var blue2=p5.color(255);var blue1=p5.color(63,191,191);for(var y=0;y<height;y++){var n=p5.map(y,0,height,0,1);var newc=p5.lerpColor(blue1,blue2,n);p5.stroke(newc);p5.line(0,y,width,y);}p5.angleMode(p5.DEGREES);p5.noLoop();};p5.draw=function(){// translate to the center of the screen\np5.translate(width/2,height);var branchLength=props.tasks;if(branchLength<150){branchLength=branchLength+props.tasks*15;// console.log(props.tasks, branchLength)\np5.branch(branchLength);}else{p5.branch(branchLength);}};p5.branch=function(len){p5.push();if(len>10){p5.strokeWeight(p5.map(len,10,100,1,15));p5.stroke(70,40,20,200);//the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\np5.line(0,0,0,-len);//displace objects within the display window\n//The x parameter specifies left/right translation, the y parameter specifies up/down translation.\np5.translate(0,-len);//translate to the end of the branch\np5.rotate(25);p5.branch(len*p5.random(0.7,0.9));p5.rotate(p5.random(-50,-60));p5.branch(len*p5.random(0.7,0.9));}else{var r,g,b,transparency,color;if(selfCareCount>0){color=colorGreenIfLeaf(IS_LEAF);IS_LEAF=!IS_LEAF;//a counter governs how many flowers are produced based on self care\nselfCareCount--;}else{color=colorGreenIfLeaf(true);}r=color.r;g=color.g;b=color.b;transparency=color.transparency;p5.fill(r,g,b,transparency);p5.noStroke();//draw leaf\np5.beginShape();for(var i=45;i<135;i++){var rad=10;var x=rad*p5.cos(i);var y=rad*p5.sin(i);p5.vertex(x,y);}for(var _i=135;_i>40;_i--){var _rad=10;var _x=_rad*p5.cos(_i);var _y=_rad*p5.sin(-_i)+15;p5.vertex(_x,_y);}p5.endShape(p5.CLOSE);}p5.pop();};}return/*#__PURE__*/_jsx(ReactP5Wrapper,{sketch:sketch});}","map":{"version":3,"names":["random","React","ReactP5Wrapper","Tree","props","sketch","p5","IS_LEAF","selfCareCount","colorGreenIfLeaf","isLeaf","r","g","b","transparency","width","windowWidth","height","windowHeight","setup","createCanvas","blue2","color","blue1","y","n","map","newc","lerpColor","stroke","line","angleMode","DEGREES","noLoop","draw","translate","branchLength","tasks","branch","len","push","strokeWeight","rotate","fill","noStroke","beginShape","i","rad","x","cos","sin","vertex","endShape","CLOSE","pop"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import { random } from \"nanoid\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nexport default function Tree(props) {\n  function sketch(p5) {\n    let IS_LEAF = true;\n    let selfCareCount = 200;\n    function colorGreenIfLeaf(isLeaf) {\n      if(isLeaf) {\n        return {\n          r: 80 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 40 + p5.random(-20, 20),\n          transparency: 200\n        }\n      }\n      else {\n        return {\n          r: 220 + p5.random(-20, 20),\n          g: 120 + p5.random(-20, 20),\n          b: 170 + p5.random(-20, 20),\n          transparency: 255\n        }\n      }\n    }\n\n    let width = p5.windowWidth;\n    let height = p5.windowHeight*0.9;\n  \n    p5.setup = () => { \n      p5.createCanvas(width, height);\n      let blue2 = p5.color(255);\n      let blue1 = p5.color(63, 191, 191);\n      \n      for(let y=0; y<height; y++){\n        let n = p5.map(y,0,height,0,1);\n        let newc = p5.lerpColor(blue1,blue2,n);\n        p5.stroke(newc);\n        p5.line(0,y,width, y);\n    }\n    p5.angleMode(p5.DEGREES)\n      p5.noLoop()\n  }\n  \n    p5.draw = () => {\n      // translate to the center of the screen\n      p5.translate(width/2, height);\n\n      let branchLength = props.tasks;\n      if(branchLength < 150) {\n        branchLength = branchLength + (props.tasks * 15);\n        // console.log(props.tasks, branchLength)\n        p5.branch(branchLength)\n      }\n      else {\n        p5.branch(branchLength)\n      }\n    }\n  \n    p5.branch = (len) => {\n      p5.push();\n      if(len > 10) {\n\n        p5.strokeWeight(p5.map(len, 10, 100, 1, 15))\n        p5.stroke(70, 40, 20, 200)\n        //the y-coordinate of the second point should be negative of the length inorder for the tree to turn in the right direction\n        p5.line(0, 0, 0, -len) \n        //displace objects within the display window\n        //The x parameter specifies left/right translation, the y parameter specifies up/down translation.\n        p5.translate(0, -len) //translate to the end of the branch\n        p5.rotate(25)\n        p5.branch(len * p5.random(0.7, 0.9))\n        p5.rotate(p5.random(-50, -60))\n        p5.branch(len * p5.random(0.7, 0.9))\n      } else {\n        let r, g, b, transparency, color;\n        if(selfCareCount > 0) {\n          \n          color = colorGreenIfLeaf(IS_LEAF)\n          IS_LEAF = !IS_LEAF; //a counter governs how many flowers are produced based on self care\n          selfCareCount--;\n        }\n        else {\n          color = colorGreenIfLeaf(true)\n        }\n        r = color.r\n        g = color.g\n        b = color.b\n        transparency = color.transparency;\n        \n        p5.fill(r, g, b, transparency);\n        p5.noStroke()\n        \n        //draw leaf\n        p5.beginShape()\n        for(let i=45; i<135; i++) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(i)\n          p5.vertex(x, y)\n        }\n        for(let i=135; i>40; i--) {\n          let rad = 10;\n          let x = rad * p5.cos(i)\n          let y = rad * p5.sin(-i) + 15\n          p5.vertex(x, y)\n        }\n        p5.endShape(p5.CLOSE)\n      }\n      p5.pop();\n    };\n  }\n\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":"AAAA,OAASA,MAAM,KAAQ,QAAQ,CAC/B,MAAOC,MAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,kBAAkB,CAAC,2CAElD,cAAe,SAASC,KAAI,CAACC,KAAK,CAAE,CAClC,QAASC,OAAM,CAACC,EAAE,CAAE,CAClB,GAAIC,QAAO,CAAG,IAAI,CAClB,GAAIC,cAAa,CAAG,GAAG,CACvB,QAASC,iBAAgB,CAACC,MAAM,CAAE,CAChC,GAAGA,MAAM,CAAE,CACT,MAAO,CACLC,CAAC,CAAE,EAAE,CAAGL,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,EAAE,CAAC,CAC1BY,CAAC,CAAE,GAAG,CAAGN,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,EAAE,CAAC,CAC3Ba,CAAC,CAAE,EAAE,CAAGP,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,EAAE,CAAC,CAC1Bc,YAAY,CAAE,GAChB,CAAC,CACH,CAAC,IACI,CACH,MAAO,CACLH,CAAC,CAAE,GAAG,CAAGL,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,EAAE,CAAC,CAC3BY,CAAC,CAAE,GAAG,CAAGN,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,EAAE,CAAC,CAC3Ba,CAAC,CAAE,GAAG,CAAGP,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,EAAE,CAAC,CAC3Bc,YAAY,CAAE,GAChB,CAAC,CACH,CACF,CAEA,GAAIC,MAAK,CAAGT,EAAE,CAACU,WAAW,CAC1B,GAAIC,OAAM,CAAGX,EAAE,CAACY,YAAY,CAAC,GAAG,CAEhCZ,EAAE,CAACa,KAAK,CAAG,UAAM,CACfb,EAAE,CAACc,YAAY,CAACL,KAAK,CAAEE,MAAM,CAAC,CAC9B,GAAII,MAAK,CAAGf,EAAE,CAACgB,KAAK,CAAC,GAAG,CAAC,CACzB,GAAIC,MAAK,CAAGjB,EAAE,CAACgB,KAAK,CAAC,EAAE,CAAE,GAAG,CAAE,GAAG,CAAC,CAElC,IAAI,GAAIE,EAAC,CAAC,CAAC,CAAEA,CAAC,CAACP,MAAM,CAAEO,CAAC,EAAE,CAAC,CACzB,GAAIC,EAAC,CAAGnB,EAAE,CAACoB,GAAG,CAACF,CAAC,CAAC,CAAC,CAACP,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9B,GAAIU,KAAI,CAAGrB,EAAE,CAACsB,SAAS,CAACL,KAAK,CAACF,KAAK,CAACI,CAAC,CAAC,CACtCnB,EAAE,CAACuB,MAAM,CAACF,IAAI,CAAC,CACfrB,EAAE,CAACwB,IAAI,CAAC,CAAC,CAACN,CAAC,CAACT,KAAK,CAAES,CAAC,CAAC,CACzB,CACAlB,EAAE,CAACyB,SAAS,CAACzB,EAAE,CAAC0B,OAAO,CAAC,CACtB1B,EAAE,CAAC2B,MAAM,EAAE,CACf,CAAC,CAEC3B,EAAE,CAAC4B,IAAI,CAAG,UAAM,CACd;AACA5B,EAAE,CAAC6B,SAAS,CAACpB,KAAK,CAAC,CAAC,CAAEE,MAAM,CAAC,CAE7B,GAAImB,aAAY,CAAGhC,KAAK,CAACiC,KAAK,CAC9B,GAAGD,YAAY,CAAG,GAAG,CAAE,CACrBA,YAAY,CAAGA,YAAY,CAAIhC,KAAK,CAACiC,KAAK,CAAG,EAAG,CAChD;AACA/B,EAAE,CAACgC,MAAM,CAACF,YAAY,CAAC,CACzB,CAAC,IACI,CACH9B,EAAE,CAACgC,MAAM,CAACF,YAAY,CAAC,CACzB,CACF,CAAC,CAED9B,EAAE,CAACgC,MAAM,CAAG,SAACC,GAAG,CAAK,CACnBjC,EAAE,CAACkC,IAAI,EAAE,CACT,GAAGD,GAAG,CAAG,EAAE,CAAE,CAEXjC,EAAE,CAACmC,YAAY,CAACnC,EAAE,CAACoB,GAAG,CAACa,GAAG,CAAE,EAAE,CAAE,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,CAAC,CAC5CjC,EAAE,CAACuB,MAAM,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAC1B;AACAvB,EAAE,CAACwB,IAAI,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAACS,GAAG,CAAC,CACtB;AACA;AACAjC,EAAE,CAAC6B,SAAS,CAAC,CAAC,CAAE,CAACI,GAAG,CAAC,CAAC;AACtBjC,EAAE,CAACoC,MAAM,CAAC,EAAE,CAAC,CACbpC,EAAE,CAACgC,MAAM,CAACC,GAAG,CAAGjC,EAAE,CAACN,MAAM,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,CACpCM,EAAE,CAACoC,MAAM,CAACpC,EAAE,CAACN,MAAM,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,CAAC,CAC9BM,EAAE,CAACgC,MAAM,CAACC,GAAG,CAAGjC,EAAE,CAACN,MAAM,CAAC,GAAG,CAAE,GAAG,CAAC,CAAC,CACtC,CAAC,IAAM,CACL,GAAIW,EAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,YAAY,CAAEQ,KAAK,CAChC,GAAGd,aAAa,CAAG,CAAC,CAAE,CAEpBc,KAAK,CAAGb,gBAAgB,CAACF,OAAO,CAAC,CACjCA,OAAO,CAAG,CAACA,OAAO,CAAE;AACpBC,aAAa,EAAE,CACjB,CAAC,IACI,CACHc,KAAK,CAAGb,gBAAgB,CAAC,IAAI,CAAC,CAChC,CACAE,CAAC,CAAGW,KAAK,CAACX,CAAC,CACXC,CAAC,CAAGU,KAAK,CAACV,CAAC,CACXC,CAAC,CAAGS,KAAK,CAACT,CAAC,CACXC,YAAY,CAAGQ,KAAK,CAACR,YAAY,CAEjCR,EAAE,CAACqC,IAAI,CAAChC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,YAAY,CAAC,CAC9BR,EAAE,CAACsC,QAAQ,EAAE,CAEb;AACAtC,EAAE,CAACuC,UAAU,EAAE,CACf,IAAI,GAAIC,EAAC,CAAC,EAAE,CAAEA,CAAC,CAAC,GAAG,CAAEA,CAAC,EAAE,CAAE,CACxB,GAAIC,IAAG,CAAG,EAAE,CACZ,GAAIC,EAAC,CAAGD,GAAG,CAAGzC,EAAE,CAAC2C,GAAG,CAACH,CAAC,CAAC,CACvB,GAAItB,EAAC,CAAGuB,GAAG,CAAGzC,EAAE,CAAC4C,GAAG,CAACJ,CAAC,CAAC,CACvBxC,EAAE,CAAC6C,MAAM,CAACH,CAAC,CAAExB,CAAC,CAAC,CACjB,CACA,IAAI,GAAIsB,GAAC,CAAC,GAAG,CAAEA,EAAC,CAAC,EAAE,CAAEA,EAAC,EAAE,CAAE,CACxB,GAAIC,KAAG,CAAG,EAAE,CACZ,GAAIC,GAAC,CAAGD,IAAG,CAAGzC,EAAE,CAAC2C,GAAG,CAACH,EAAC,CAAC,CACvB,GAAItB,GAAC,CAAGuB,IAAG,CAAGzC,EAAE,CAAC4C,GAAG,CAAC,CAACJ,EAAC,CAAC,CAAG,EAAE,CAC7BxC,EAAE,CAAC6C,MAAM,CAACH,EAAC,CAAExB,EAAC,CAAC,CACjB,CACAlB,EAAE,CAAC8C,QAAQ,CAAC9C,EAAE,CAAC+C,KAAK,CAAC,CACvB,CACA/C,EAAE,CAACgD,GAAG,EAAE,CACV,CAAC,CACH,CAEA,mBAAO,KAAC,cAAc,EAAC,MAAM,CAAEjD,MAAO,EAAG,CAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}