{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js\";\nimport React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction sketch(p5) {\n  p5.setup = () => {\n    // p5.createCanvas(p5.windowWidth, p5.windowHeight)\n    p5.createCanvas(600, 400, p5.WEBGL);\n    p5.angleMode(p5.DEGREES);\n    console.log(\"hello world\");\n    p5.noLoop();\n  };\n  p5.draw = () => {\n    p5.background(100);\n    // translate to the center of the screen\n    p5.translate(p5.width / 2, p5.height / 2);\n    p5.branch(100);\n  };\n  p5.branch = () => {\n    p5.background(100);\n    // translate to the center of the screen\n    p5.translate(p5.width / 2, p5.height / 2);\n    p5.branch(100);\n  };\n}\nexport default function Tree() {\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_c = Tree;\nvar _c;\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"names":["React","ReactP5Wrapper","sketch","p5","setup","createCanvas","WEBGL","angleMode","DEGREES","console","log","noLoop","draw","background","translate","width","height","branch","Tree"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Tree.js"],"sourcesContent":["import React from \"react\";\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\n\nfunction sketch(p5) {\n  p5.setup = () => {\n    // p5.createCanvas(p5.windowWidth, p5.windowHeight)\n    p5.createCanvas(600, 400, p5.WEBGL)\n    p5.angleMode(p5.DEGREES)\n    console.log(\"hello world\")\n\n    p5.noLoop()\n  }\n\n  p5.draw = () => {\n    p5.background(100)\n    // translate to the center of the screen\n    p5.translate(p5.width/2, p5.height/2)\n    p5.branch(100)\n  }\n  \n  p5.branch = () => {\n    p5.background(100)\n    // translate to the center of the screen\n    p5.translate(p5.width/2, p5.height/2)\n    p5.branch(100)\n  };\n}\n\nexport default function Tree() {\n  return <ReactP5Wrapper sketch={sketch} />;\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAAC;AAElD,SAASC,MAAM,CAACC,EAAE,EAAE;EAClBA,EAAE,CAACC,KAAK,GAAG,MAAM;IACf;IACAD,EAAE,CAACE,YAAY,CAAC,GAAG,EAAE,GAAG,EAAEF,EAAE,CAACG,KAAK,CAAC;IACnCH,EAAE,CAACI,SAAS,CAACJ,EAAE,CAACK,OAAO,CAAC;IACxBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAE1BP,EAAE,CAACQ,MAAM,EAAE;EACb,CAAC;EAEDR,EAAE,CAACS,IAAI,GAAG,MAAM;IACdT,EAAE,CAACU,UAAU,CAAC,GAAG,CAAC;IAClB;IACAV,EAAE,CAACW,SAAS,CAACX,EAAE,CAACY,KAAK,GAAC,CAAC,EAAEZ,EAAE,CAACa,MAAM,GAAC,CAAC,CAAC;IACrCb,EAAE,CAACc,MAAM,CAAC,GAAG,CAAC;EAChB,CAAC;EAEDd,EAAE,CAACc,MAAM,GAAG,MAAM;IAChBd,EAAE,CAACU,UAAU,CAAC,GAAG,CAAC;IAClB;IACAV,EAAE,CAACW,SAAS,CAACX,EAAE,CAACY,KAAK,GAAC,CAAC,EAAEZ,EAAE,CAACa,MAAM,GAAC,CAAC,CAAC;IACrCb,EAAE,CAACc,MAAM,CAAC,GAAG,CAAC;EAChB,CAAC;AACH;AAEA,eAAe,SAASC,IAAI,GAAG;EAC7B,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEhB;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFuBgB,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}