{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n//A tiny, secure, URL-friendly, unique string ID generator for JavaScript.\nimport { nanoid } from \"nanoid\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction usePrevious(value) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\nfunction App(props) {\n  _s2();\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const filterButtonList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid()}`,\n      name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n    console.log(tasks);\n  }\n  function editTask(id, newName) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          name: newName\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    name: task.name,\n    completed: task.completed,\n    id: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this));\n  const tasksNoun = taskList.length === 1 ? \"task\" : \"tasks\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO: Grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterButtonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      tabIndex: \"-1\",\n      ref: listHeadingRef,\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), taskList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"z/TwNX0bSwGiwjZeEGg9KRxw5KA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Todo","Form","FilterButton","nanoid","React","useState","usePrevious","value","ref","useRef","useEffect","current","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","filterButtonList","map","name","addTask","newTask","id","deleteTask","remainingTasks","console","log","editTask","newName","updatedTasks","toggleTaskCompleted","taskList","tasksNoun","length","headingText","listHeadingRef"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/App.js"],"sourcesContent":["import Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\n//A tiny, secure, URL-friendly, unique string ID generator for JavaScript.\nimport { nanoid } from \"nanoid\";\nimport React, { useState } from \"react\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  const filterButtonList = FILTER_NAMES.map((name) => (\n    <FilterButton \n      key={name} \n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n      />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n    console.log(tasks)\n  }\n\n  function editTask(id, newName) {\n    const updatedTasks = tasks.map((task) => {\n      if(id === task.id) {\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if(id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  const taskList = tasks\n        .filter(FILTER_MAP[filter])\n        .map((task) => (\n            <Todo name={task.name} \n                  completed={task.completed} \n                  id={task.id}\n                  key={task.id}\n                  toggleTaskCompleted={toggleTaskCompleted}\n                  deleteTask={deleteTask}\n                  editTask={editTask}\n                />\n              )\n            );\n\n  const tasksNoun = taskList.length === 1 ? \"task\" : \"tasks\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TODO: Grow</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterButtonList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n\n      {taskList}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}