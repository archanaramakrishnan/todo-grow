{"ast":null,"code":"var _jsxFileName = \"/Users/archanaramki/Workspace/todo-grow/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [name, setName] = useState('');\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name === \"\") {\n      alert(\"Please enter what needs to be done before adding it\");\n    } else {\n      props.addTask(name);\n      setName(\"\");\n    }\n  }\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n  const TitleIcon = props.icon;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(TitleIcon, {\n        fontSize: \"25px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `new-${props.id}-input`,\n        className: \"label\",\n        children: [\"\\xA0\", props.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: `new-${props.id}-input`,\n      className: \"label\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: `new-${props.id}-input`,\n      className: \"input\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","props","name","setName","handleSubmit","e","preventDefault","alert","addTask","handleChange","target","value","TitleIcon","icon","id","title"],"sources":["/Users/archanaramki/Workspace/todo-grow/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction Form(props) {\n\n    const [name, setName] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if(name === \"\") {\n            alert(\"Please enter what needs to be done before adding it\")\n        }\n        else {\n            props.addTask(name);\n            setName(\"\");\n        }\n    }\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n\n    const TitleIcon = props.icon;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2 className=\"label-wrapper\">\n                <TitleIcon fontSize=\"25px\"/>\n                <label htmlFor={`new-${props.id}-input`} className=\"label\">\n                &nbsp;{props.title}\n                </label>\n            </h2>\n            <label htmlFor={`new-${props.id}-input`} className=\"label\"> </label>\n            <input\n                type=\"text\"\n                id={`new-${props.id}-input`}\n                className=\"input\"\n                name=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"btn btn__primary\">\n            Add\n            </button>\n      </form>\n    );\n}\n\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAEjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASK,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGJ,IAAI,KAAK,EAAE,EAAE;MACZK,KAAK,CAAC,qDAAqD,CAAC;IAChE,CAAC,MACI;MACDN,KAAK,CAACO,OAAO,CAACN,IAAI,CAAC;MACnBC,OAAO,CAAC,EAAE,CAAC;IACf;EACJ;EAEA,SAASM,YAAY,CAACJ,CAAC,EAAE;IACrBF,OAAO,CAACE,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;EAC3B;EAEA,MAAMC,SAAS,GAAGX,KAAK,CAACY,IAAI;EAE5B,oBACI;IAAM,QAAQ,EAAET,YAAa;IAAA,wBACzB;MAAI,SAAS,EAAC,eAAe;MAAA,wBACzB,QAAC,SAAS;QAAC,QAAQ,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC5B;QAAO,OAAO,EAAG,OAAMH,KAAK,CAACa,EAAG,QAAQ;QAAC,SAAS,EAAC,OAAO;QAAA,mBACnDb,KAAK,CAACc,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACL;MAAO,OAAO,EAAG,OAAMd,KAAK,CAACa,EAAG,QAAQ;MAAC,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eACpE;MACI,IAAI,EAAC,MAAM;MACX,EAAE,EAAG,OAAMb,KAAK,CAACa,EAAG,QAAQ;MAC5B,SAAS,EAAC,OAAO;MACjB,IAAI,EAAC,MAAM;MACX,YAAY,EAAC,KAAK;MAClB,KAAK,EAAEZ,IAAK;MACZ,QAAQ,EAAEO;IAAa;MAAA;MAAA;MAAA;IAAA,QACzB,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAC,kBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACR;AAEb;AAAC,GA5CQT,IAAI;AAAA,KAAJA,IAAI;AA8Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}